% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R, R/sample_comparison_frame.R
\name{createComparisonsFrame,BSAExperiment-method}
\alias{createComparisonsFrame,BSAExperiment-method}
\alias{sample_comparison_frame}
\title{Create Sample Comparison Frame}
\usage{
\S4method{createComparisonsFrame}{BSAExperiment}(
  object,
  grouping_variable = "group",
  bulk_variable = "bulk",
  bulk_base_condition = "low",
  var1_name = "low_bulk",
  var2_name = "high_bulk",
  base_cond_in_each_group = TRUE
)

sample_comparison_frame(
  pool_df,
  grouping_var = "batch",
  condition_var = "cond",
  base_comparison_condition = "inoculum",
  var1_name = "lowBulk",
  var2_name = "highBulk",
  base_cond_in_each_group = TRUE
)
}
\arguments{
\item{var1_name}{the output frame will have two columns, the first storing
the samples which correspond to the \code{base_comparison_condition},
the other to the other sample conditions, Default: 'lowBulk'}

\item{var2_name}{as in var1_name, this will rename the second column
in the output frame, Default: 'highBulk'}

\item{base_cond_in_each_group}{whether to include the base condition in
each group. Default TRUE}

\item{pool_df}{a dataframe which describes the pool}

\item{grouping_var}{column by which to group and split the
dataframe, Default: 'batch'}

\item{condition_var}{column which describes the various conditions
of each sample, eg if tissue, then the levels of this column might be
c(lung, brain, YPD, inoculum), Default: 'cond'}

\item{base_comparison_condition}{condition against which to compare all
other conditions, Default: 'inoculum'}
}
\value{
A two column dataframe where the first column is the condition
against which all other sample conditions in that group are compared.
An example structure is:
\tabular{rcc}{ \tab highBulk \tab lowBulk \cr \tab \eqn{P1.1I}
\tab \eqn{P1.1L} \cr \tab
\eqn{P1.1I} \tab \eqn{P1.1B} \cr}

A two column dataframe where the first column is the condition
against which all other sample conditions in that group are compared.
An example structure is:
\tabular{rcc}{ \tab highBulk \tab lowBulk \cr \tab \eqn{P1.1I}
\tab \eqn{P1.1L} \cr \tab
\eqn{P1.1I} \tab \eqn{P1.1B} \cr}
}
\description{
Create a dataframe which describes comparisons between a given
condition and all other conditions described in a pool dataframe

Create a dataframe which describes comparisons between a given
condition and all other conditions described in a pool dataframe
}
\details{
This prepares samples for QTLseqr

This prepares samples for QTLseqr
}
\examples{
if(interactive()){
   library(dplyr)
   # NOTE! "P2.1I" is a singleton
    sample_example = c("P1.1I","P1.1L","P1.1Y",
                  "P1.2B","P1.2I","P1.2L","P1.2Y","P2.1I")
    pool_construction = tibble(sample = sample_example) \%>\%
    mutate(group = str_remove(sample, "\\\\w$")) \%>\%
   mutate(cond = ifelse(str_detect(sample, "P[[:alnum:]].{1,3}I"),'inoculum', NA)) \%>\%
   mutate(cond = ifelse(str_detect(sample, "P[[:alnum:]].{1,3}Y"),'ypd', cond)) \%>\%
   mutate(cond = ifelse(str_detect(sample, "P[[:alnum:]].{1,3}L"),'lung', cond)) \%>\%
   mutate(cond = ifelse(str_detect(sample, "P[[:alnum:]].{1,3}B"),'brain', cond)) \%>\%
   mutate(bulk = ifelse(cond == "inoculum", 'low', 'high'))
   sample_comparison_frame(pool_construction)
 }
if(interactive()){
   library(dplyr)
   # NOTE! "P2.1I" is a singleton
    sample_example = c("P1.1I","P1.1L","P1.1Y",
                  "P1.2B","P1.2I","P1.2L","P1.2Y","P2.1I")
    pool_construction = tibble(sample = sample_example) \%>\%
    mutate(batch = str_remove(sample, "\\\\w$")) \%>\%
   mutate(cond = ifelse(str_detect(sample, "P[[:alnum:]].{1,3}I"),'inoculum', NA)) \%>\%
   mutate(cond = ifelse(str_detect(sample, "P[[:alnum:]].{1,3}Y"),'ypd', cond)) \%>\%
   mutate(cond = ifelse(str_detect(sample, "P[[:alnum:]].{1,3}L"),'lung', cond)) \%>\%
   mutate(cond = ifelse(str_detect(sample, "P[[:alnum:]].{1,3}B"),'brain', cond)) \%>\%
   mutate(bulk = ifelse(cond == "inoculum", 'low', 'high'))
   sample_comparison_frame(pool_construction)
 }
}
\seealso{
\code{\link[dplyr]{reexports}}, \code{\link[dplyr]{group_by}},
\code{\link[dplyr]{group_split}}, \code{\link[dplyr]{pull}},
\code{\link[dplyr]{filter}}, \code{\link[dplyr]{distinct}},
\code{\link[dplyr]{mutate}}, \code{\link[dplyr]{rename}}
\code{\link[rlang]{sym}}
\code{\link[purrr]{map}}

\code{\link[dplyr]{reexports}}, \code{\link[dplyr]{group_by}},
\code{\link[dplyr]{group_split}}, \code{\link[dplyr]{pull}},
\code{\link[dplyr]{filter}}, \code{\link[dplyr]{distinct}},
\code{\link[dplyr]{mutate}}, \code{\link[dplyr]{rename}}
\code{\link[rlang]{sym}}
\code{\link[purrr]{map}}
}
\author{
chase mateusiak
}
